syntax = "proto3";

package cluster;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./api";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Cluster API";
  };
};

// The cluster service definition.
service ClusterController {
    rpc Create(Cluster) returns (CreateClusterResp) {
        option (google.api.http) = {
            post: "/api/v1/cluster"
            body: "*"
        };
    }

    rpc Read(ReadClusterReq) returns (ReadClusterResp)  {
        option (google.api.http) = {
            get: "/api/v1/cluster/{id}"
        };
    }

    rpc Update(Cluster) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            patch: "/api/v1/cluster/{id}"
            body: "*"
        };
    }

    rpc Delete(DeleteClusterReq) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/cluster/{id}"
        };
    }

    rpc ListPage(ListClusterPageReq) returns (ListClusterPageResp) {
        option (google.api.http) = {
            get: "/api/v1/cluster/page/{page_num}"
        };
    }

    rpc Register(RegisterClusterReq) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/cluster/register"
        };
    }

    rpc Unregister(UnregisterClusterReq) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/cluster/unregister"
        };
    }

    rpc GenerateUninstallCmd(GenerateUninstallCmdReq) returns (GenerateUninstallCmdResp) {
        option (google.api.http) = {
            get: "/api/v1/cluster/{id}/cmd/uninstall"
        };
    }

    rpc GenerateInstallCmd(GenerateInstallCmdReq) returns (GenerateInstallCmdResp) {
        option (google.api.http) = {
            get: "/api/v1/cluster/{id}/cmd/install"
        };
    }

    rpc GenerateValuesYAML(GenerateValuesReq) returns (GenerateValuesResp) {
        option (google.api.http) = {
            get: "/api/v1/cluster/{id}/cmd/values"
        };
    }


    rpc ListRegistered(google.protobuf.Empty) returns (ListRegisteredResp) {
        option (google.api.http) = {
            get: "/api/v1/cluster/registered"
        };
    }
}

message Cluster {
    enum Status {
        STATUS_UNREGISTERED = 0;
        STATUS_REGISTERED = 1;
    }

    message Config {
        message Postgres {
            string address = 1;
            string user = 2;
            string password = 3;
            bool use_tls = 4;
            bool check_cert = 5;
            string ca = 6;
            bool persistence = 7;
            string storage_class = 8;
            string database= 9;
        }

        message Clickhouse {
            string address = 1;
            string user = 2;
            string password = 3;
            bool use_tls = 4;
            bool check_cert = 5;
            string ca = 6;
            bool persistence = 7;
            string storage_class = 8;
            string database= 9;
        }

        message Redis {
            string address = 1;
            string user = 2;
            string password = 3;
            bool use_tls = 4;
            bool check_cert = 5;
            string ca = 6;
            bool persistence = 7;
            string storage_class = 8;
        }

        message Rabbit {
            string address = 1;
            string user = 2;
            string password = 3;
            bool persistence = 4;
            string storage_class = 5;
        }

        message Registry {
            string address = 1;
            string user = 2;
            string password = 3;
            bool image_short_names = 4;
        }

        message Ingress {
            string ingress_class = 1;
            string hostname = 2;
            string cert = 3;
            string cert_key = 4;
        }

        message NodePort {
            string port = 1;
        }

        string version = 1;
        string own_cs_url = 2;
        string central_cs_url = 3;
        Postgres postgres = 4;
        Clickhouse clickhouse = 5;
        Redis redis = 6;
        Rabbit rabbit = 7;
        Registry registry = 8;
        Ingress ingress = 9;
        NodePort node_port = 10;
        string namespace = 12;
        string proxy_url = 13;
    }

    string id = 1;
    string name = 2;
    Status status = 3;
    Config config = 4;
    google.protobuf.Timestamp created_at = 5;
}

message CreateClusterResp {
    string id = 1;
}

message ReadClusterReq {
    string id = 1;
}

message ReadClusterResp {
    Cluster cluster = 1;
    bool deleted = 2;
}

message DeleteClusterReq {
    string id = 1;
}

message ListClusterPageReq {
    uint32 page_num = 1;
    uint32 page_size = 2;
    string order = 3;
}

message GenerateInstallCmdReq {
    string id = 1;
    bool use_values_file = 2;
}

message GenerateInstallCmdResp {
    string cmd = 1;
}

message GenerateValuesReq {
    string id = 1;
}

message GenerateValuesResp {
    string yaml = 1;
}

message ListClusterPageResp {
    uint32 total = 1;
    repeated Cluster clusters = 2;
}

message RegisterClusterReq {
    string token = 1;
}

message UnregisterClusterReq {
    string token = 1;
}

message GenerateUninstallCmdReq {
    string id = 1;
}

message GenerateUninstallCmdResp {
    string cmd = 1;
}

message ListRegisteredResp {
    message Cluster {
        string id = 1;
        string name = 2;
        string own_cs_url = 3;
    }

    repeated Cluster clusters = 1;
}
