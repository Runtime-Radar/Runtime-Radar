// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: rule.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rule_Type int32

const (
	Rule_TYPE_RUNTIME Rule_Type = 0
)

// Enum value maps for Rule_Type.
var (
	Rule_Type_name = map[int32]string{
		0: "TYPE_RUNTIME",
	}
	Rule_Type_value = map[string]int32{
		"TYPE_RUNTIME": 0,
	}
)

func (x Rule_Type) Enum() *Rule_Type {
	p := new(Rule_Type)
	*p = x
	return p
}

func (x Rule_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rule_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_rule_proto_enumTypes[0].Descriptor()
}

func (Rule_Type) Type() protoreflect.EnumType {
	return &file_rule_proto_enumTypes[0]
}

func (x Rule_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rule_Type.Descriptor instead.
func (Rule_Type) EnumDescriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 0}
}

type Rule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rule  *Rule_RuleJSON         `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
	// type indicates what type of enforcement rule is used for (now support just runtime.)
	Type          Rule_Type   `protobuf:"varint,5,opt,name=type,proto3,enum=rule.Rule_Type" json:"type,omitempty"`
	Scope         *Rule_Scope `protobuf:"bytes,6,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_rule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0}
}

func (x *Rule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Rule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rule) GetRule() *Rule_RuleJSON {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Rule) GetType() Rule_Type {
	if x != nil {
		return x.Type
	}
	return Rule_TYPE_RUNTIME
}

func (x *Rule) GetScope() *Rule_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

type CreateRuleResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRuleResp) Reset() {
	*x = CreateRuleResp{}
	mi := &file_rule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRuleResp) ProtoMessage() {}

func (x *CreateRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRuleResp.ProtoReflect.Descriptor instead.
func (*CreateRuleResp) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRuleResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadRuleReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRuleReq) Reset() {
	*x = ReadRuleReq{}
	mi := &file_rule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRuleReq) ProtoMessage() {}

func (x *ReadRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRuleReq.ProtoReflect.Descriptor instead.
func (*ReadRuleReq) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRuleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReadRuleResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	Deleted       bool                   `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRuleResp) Reset() {
	*x = ReadRuleResp{}
	mi := &file_rule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRuleResp) ProtoMessage() {}

func (x *ReadRuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRuleResp.ProtoReflect.Descriptor instead.
func (*ReadRuleResp) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{3}
}

func (x *ReadRuleResp) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *ReadRuleResp) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type DeleteRuleReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRuleReq) Reset() {
	*x = DeleteRuleReq{}
	mi := &file_rule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRuleReq) ProtoMessage() {}

func (x *DeleteRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRuleReq.ProtoReflect.Descriptor instead.
func (*DeleteRuleReq) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRuleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRulePageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNum       uint32                 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Order         string                 `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulePageReq) Reset() {
	*x = ListRulePageReq{}
	mi := &file_rule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulePageReq) ProtoMessage() {}

func (x *ListRulePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulePageReq.ProtoReflect.Descriptor instead.
func (*ListRulePageReq) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{5}
}

func (x *ListRulePageReq) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListRulePageReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRulePageReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type ListRulePageResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rules         []*Rule                `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRulePageResp) Reset() {
	*x = ListRulePageResp{}
	mi := &file_rule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRulePageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRulePageResp) ProtoMessage() {}

func (x *ListRulePageResp) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRulePageResp.ProtoReflect.Descriptor instead.
func (*ListRulePageResp) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{6}
}

func (x *ListRulePageResp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListRulePageResp) GetRules() []*Rule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type NotifyTargetsInUseReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Targets       []string               `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyTargetsInUseReq) Reset() {
	*x = NotifyTargetsInUseReq{}
	mi := &file_rule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyTargetsInUseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTargetsInUseReq) ProtoMessage() {}

func (x *NotifyTargetsInUseReq) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTargetsInUseReq.ProtoReflect.Descriptor instead.
func (*NotifyTargetsInUseReq) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyTargetsInUseReq) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type NotifyTargetsInUseResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InUse         bool                   `protobuf:"varint,1,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyTargetsInUseResp) Reset() {
	*x = NotifyTargetsInUseResp{}
	mi := &file_rule_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyTargetsInUseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyTargetsInUseResp) ProtoMessage() {}

func (x *NotifyTargetsInUseResp) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyTargetsInUseResp.ProtoReflect.Descriptor instead.
func (*NotifyTargetsInUseResp) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyTargetsInUseResp) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

type Rule_Scope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ImageNames    []string               `protobuf:"bytes,2,rep,name=image_names,json=imageNames,proto3" json:"image_names,omitempty"`
	Registries    []string               `protobuf:"bytes,3,rep,name=registries,proto3" json:"registries,omitempty"`
	Clusters      []string               `protobuf:"bytes,4,rep,name=clusters,proto3" json:"clusters,omitempty"`
	Namespaces    []string               `protobuf:"bytes,5,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Pods          []string               `protobuf:"bytes,6,rep,name=pods,proto3" json:"pods,omitempty"`
	Containers    []string               `protobuf:"bytes,7,rep,name=containers,proto3" json:"containers,omitempty"`
	Nodes         []string               `protobuf:"bytes,8,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule_Scope) Reset() {
	*x = Rule_Scope{}
	mi := &file_rule_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_Scope) ProtoMessage() {}

func (x *Rule_Scope) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_Scope.ProtoReflect.Descriptor instead.
func (*Rule_Scope) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Rule_Scope) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Rule_Scope) GetImageNames() []string {
	if x != nil {
		return x.ImageNames
	}
	return nil
}

func (x *Rule_Scope) GetRegistries() []string {
	if x != nil {
		return x.Registries
	}
	return nil
}

func (x *Rule_Scope) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *Rule_Scope) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Rule_Scope) GetPods() []string {
	if x != nil {
		return x.Pods
	}
	return nil
}

func (x *Rule_Scope) GetContainers() []string {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Rule_Scope) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Rule_RuleJSON struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Version       string                   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Block         *Rule_RuleJSON_Block     `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	Notify        *Rule_RuleJSON_Notify    `protobuf:"bytes,3,opt,name=notify,proto3" json:"notify,omitempty"`
	Whitelist     *Rule_RuleJSON_Whitelist `protobuf:"bytes,4,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule_RuleJSON) Reset() {
	*x = Rule_RuleJSON{}
	mi := &file_rule_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_RuleJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_RuleJSON) ProtoMessage() {}

func (x *Rule_RuleJSON) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_RuleJSON.ProtoReflect.Descriptor instead.
func (*Rule_RuleJSON) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Rule_RuleJSON) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Rule_RuleJSON) GetBlock() *Rule_RuleJSON_Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Rule_RuleJSON) GetNotify() *Rule_RuleJSON_Notify {
	if x != nil {
		return x.Notify
	}
	return nil
}

func (x *Rule_RuleJSON) GetWhitelist() *Rule_RuleJSON_Whitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type Rule_RuleJSON_Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      string                 `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule_RuleJSON_Block) Reset() {
	*x = Rule_RuleJSON_Block{}
	mi := &file_rule_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_RuleJSON_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_RuleJSON_Block) ProtoMessage() {}

func (x *Rule_RuleJSON_Block) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_RuleJSON_Block.ProtoReflect.Descriptor instead.
func (*Rule_RuleJSON_Block) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Rule_RuleJSON_Block) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

type Rule_RuleJSON_Notify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      string                 `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"`
	Targets       []string               `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule_RuleJSON_Notify) Reset() {
	*x = Rule_RuleJSON_Notify{}
	mi := &file_rule_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_RuleJSON_Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_RuleJSON_Notify) ProtoMessage() {}

func (x *Rule_RuleJSON_Notify) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_RuleJSON_Notify.ProtoReflect.Descriptor instead.
func (*Rule_RuleJSON_Notify) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Rule_RuleJSON_Notify) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Rule_RuleJSON_Notify) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type Rule_RuleJSON_Whitelist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Threats       []string               `protobuf:"bytes,3,rep,name=threats,proto3" json:"threats,omitempty"`
	Binaries      []string               `protobuf:"bytes,4,rep,name=binaries,proto3" json:"binaries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rule_RuleJSON_Whitelist) Reset() {
	*x = Rule_RuleJSON_Whitelist{}
	mi := &file_rule_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule_RuleJSON_Whitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule_RuleJSON_Whitelist) ProtoMessage() {}

func (x *Rule_RuleJSON_Whitelist) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule_RuleJSON_Whitelist.ProtoReflect.Descriptor instead.
func (*Rule_RuleJSON_Whitelist) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Rule_RuleJSON_Whitelist) GetThreats() []string {
	if x != nil {
		return x.Threats
	}
	return nil
}

func (x *Rule_RuleJSON_Whitelist) GetBinaries() []string {
	if x != nil {
		return x.Binaries
	}
	return nil
}

var File_rule_proto protoreflect.FileDescriptor

const file_rule_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"rule.proto\x12\x04rule\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xa8\x06\n" +
	"\x04Rule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x04rule\x18\x03 \x01(\v2\x13.rule.Rule.RuleJSONR\x04rule\x12#\n" +
	"\x04type\x18\x05 \x01(\x0e2\x0f.rule.Rule.TypeR\x04type\x12&\n" +
	"\x05scope\x18\x06 \x01(\v2\x10.rule.Rule.ScopeR\x05scope\x1a\xe8\x01\n" +
	"\x05Scope\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1f\n" +
	"\vimage_names\x18\x02 \x03(\tR\n" +
	"imageNames\x12\x1e\n" +
	"\n" +
	"registries\x18\x03 \x03(\tR\n" +
	"registries\x12\x1a\n" +
	"\bclusters\x18\x04 \x03(\tR\bclusters\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x05 \x03(\tR\n" +
	"namespaces\x12\x12\n" +
	"\x04pods\x18\x06 \x03(\tR\x04pods\x12\x1e\n" +
	"\n" +
	"containers\x18\a \x03(\tR\n" +
	"containers\x12\x14\n" +
	"\x05nodes\x18\b \x03(\tR\x05nodes\x1a\xfa\x02\n" +
	"\bRuleJSON\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12/\n" +
	"\x05block\x18\x02 \x01(\v2\x19.rule.Rule.RuleJSON.BlockR\x05block\x122\n" +
	"\x06notify\x18\x03 \x01(\v2\x1a.rule.Rule.RuleJSON.NotifyR\x06notify\x12;\n" +
	"\twhitelist\x18\x04 \x01(\v2\x1d.rule.Rule.RuleJSON.WhitelistR\twhitelist\x1a#\n" +
	"\x05Block\x12\x1a\n" +
	"\bseverity\x18\x01 \x01(\tR\bseverity\x1a>\n" +
	"\x06Notify\x12\x1a\n" +
	"\bseverity\x18\x01 \x01(\tR\bseverity\x12\x18\n" +
	"\atargets\x18\x02 \x03(\tR\atargets\x1aM\n" +
	"\tWhitelist\x12\x18\n" +
	"\athreats\x18\x03 \x03(\tR\athreats\x12\x1a\n" +
	"\bbinaries\x18\x04 \x03(\tR\bbinariesJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"\x18\n" +
	"\x04Type\x12\x10\n" +
	"\fTYPE_RUNTIME\x10\x00J\x04\b\x04\x10\x05\" \n" +
	"\x0eCreateRuleResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1d\n" +
	"\vReadRuleReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"H\n" +
	"\fReadRuleResp\x12\x1e\n" +
	"\x04rule\x18\x01 \x01(\v2\n" +
	".rule.RuleR\x04rule\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\bR\adeleted\"\x1f\n" +
	"\rDeleteRuleReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"_\n" +
	"\x0fListRulePageReq\x12\x19\n" +
	"\bpage_num\x18\x01 \x01(\rR\apageNum\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x12\x14\n" +
	"\x05order\x18\x03 \x01(\tR\x05order\"J\n" +
	"\x10ListRulePageResp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x12 \n" +
	"\x05rules\x18\x02 \x03(\v2\n" +
	".rule.RuleR\x05rules\"1\n" +
	"\x15NotifyTargetsInUseReq\x12\x18\n" +
	"\atargets\x18\x01 \x03(\tR\atargets\"/\n" +
	"\x16NotifyTargetsInUseResp\x12\x15\n" +
	"\x06in_use\x18\x01 \x01(\bR\x05inUse2\x9b\x04\n" +
	"\x0eRuleController\x12C\n" +
	"\x06Create\x12\n" +
	".rule.Rule\x1a\x14.rule.CreateRuleResp\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/api/v1/rule\x12H\n" +
	"\x04Read\x12\x11.rule.ReadRuleReq\x1a\x12.rule.ReadRuleResp\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/api/v1/rule/{id}\x12J\n" +
	"\x06Update\x12\n" +
	".rule.Rule\x1a\x16.google.protobuf.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*2\x11/api/v1/rule/{id}\x12P\n" +
	"\x06Delete\x12\x13.rule.DeleteRuleReq\x1a\x16.google.protobuf.Empty\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/api/v1/rule/{id}\x12_\n" +
	"\bListPage\x12\x15.rule.ListRulePageReq\x1a\x16.rule.ListRulePageResp\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/rule/page/{page_num}\x12{\n" +
	"\x12NotifyTargetsInUse\x12\x1b.rule.NotifyTargetsInUseReq\x1a\x1c.rule.NotifyTargetsInUseResp\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/rule/notify-targets-in-useB\x18\x92A\x0e\x12\f\n" +
	"\bRule API\"\x00Z\x05./apib\x06proto3"

var (
	file_rule_proto_rawDescOnce sync.Once
	file_rule_proto_rawDescData []byte
)

func file_rule_proto_rawDescGZIP() []byte {
	file_rule_proto_rawDescOnce.Do(func() {
		file_rule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rule_proto_rawDesc), len(file_rule_proto_rawDesc)))
	})
	return file_rule_proto_rawDescData
}

var file_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_rule_proto_goTypes = []any{
	(Rule_Type)(0),                  // 0: rule.Rule.Type
	(*Rule)(nil),                    // 1: rule.Rule
	(*CreateRuleResp)(nil),          // 2: rule.CreateRuleResp
	(*ReadRuleReq)(nil),             // 3: rule.ReadRuleReq
	(*ReadRuleResp)(nil),            // 4: rule.ReadRuleResp
	(*DeleteRuleReq)(nil),           // 5: rule.DeleteRuleReq
	(*ListRulePageReq)(nil),         // 6: rule.ListRulePageReq
	(*ListRulePageResp)(nil),        // 7: rule.ListRulePageResp
	(*NotifyTargetsInUseReq)(nil),   // 8: rule.NotifyTargetsInUseReq
	(*NotifyTargetsInUseResp)(nil),  // 9: rule.NotifyTargetsInUseResp
	(*Rule_Scope)(nil),              // 10: rule.Rule.Scope
	(*Rule_RuleJSON)(nil),           // 11: rule.Rule.RuleJSON
	(*Rule_RuleJSON_Block)(nil),     // 12: rule.Rule.RuleJSON.Block
	(*Rule_RuleJSON_Notify)(nil),    // 13: rule.Rule.RuleJSON.Notify
	(*Rule_RuleJSON_Whitelist)(nil), // 14: rule.Rule.RuleJSON.Whitelist
	(*emptypb.Empty)(nil),           // 15: google.protobuf.Empty
}
var file_rule_proto_depIdxs = []int32{
	11, // 0: rule.Rule.rule:type_name -> rule.Rule.RuleJSON
	0,  // 1: rule.Rule.type:type_name -> rule.Rule.Type
	10, // 2: rule.Rule.scope:type_name -> rule.Rule.Scope
	1,  // 3: rule.ReadRuleResp.rule:type_name -> rule.Rule
	1,  // 4: rule.ListRulePageResp.rules:type_name -> rule.Rule
	12, // 5: rule.Rule.RuleJSON.block:type_name -> rule.Rule.RuleJSON.Block
	13, // 6: rule.Rule.RuleJSON.notify:type_name -> rule.Rule.RuleJSON.Notify
	14, // 7: rule.Rule.RuleJSON.whitelist:type_name -> rule.Rule.RuleJSON.Whitelist
	1,  // 8: rule.RuleController.Create:input_type -> rule.Rule
	3,  // 9: rule.RuleController.Read:input_type -> rule.ReadRuleReq
	1,  // 10: rule.RuleController.Update:input_type -> rule.Rule
	5,  // 11: rule.RuleController.Delete:input_type -> rule.DeleteRuleReq
	6,  // 12: rule.RuleController.ListPage:input_type -> rule.ListRulePageReq
	8,  // 13: rule.RuleController.NotifyTargetsInUse:input_type -> rule.NotifyTargetsInUseReq
	2,  // 14: rule.RuleController.Create:output_type -> rule.CreateRuleResp
	4,  // 15: rule.RuleController.Read:output_type -> rule.ReadRuleResp
	15, // 16: rule.RuleController.Update:output_type -> google.protobuf.Empty
	15, // 17: rule.RuleController.Delete:output_type -> google.protobuf.Empty
	7,  // 18: rule.RuleController.ListPage:output_type -> rule.ListRulePageResp
	9,  // 19: rule.RuleController.NotifyTargetsInUse:output_type -> rule.NotifyTargetsInUseResp
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_rule_proto_init() }
func file_rule_proto_init() {
	if File_rule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rule_proto_rawDesc), len(file_rule_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rule_proto_goTypes,
		DependencyIndexes: file_rule_proto_depIdxs,
		EnumInfos:         file_rule_proto_enumTypes,
		MessageInfos:      file_rule_proto_msgTypes,
	}.Build()
	File_rule_proto = out.File
	file_rule_proto_goTypes = nil
	file_rule_proto_depIdxs = nil
}
