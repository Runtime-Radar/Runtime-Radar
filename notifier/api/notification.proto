syntax = "proto3";

package notification;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "./api";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Notification API";
  };
};

// The NotificationController service definition.
service NotificationController {
  rpc Create(Notification) returns (CreateNotificationResp) {
    option (google.api.http) = {
      post: "/api/v1/notification"
      body: "*"
    };
  }
  rpc Read(ReadNotificationReq) returns (ReadNotificationResp)  {
    option (google.api.http) = {
      get: "/api/v1/notification/{id}"
    };
  }
  rpc Update(Notification) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch: "/api/v1/notification/{id}"
      body: "*"
    };
  }
  rpc Delete(DeleteNotificationReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/notification/{id}"
    };
  }
  rpc List(ListNotificationReq) returns (ListNotificationResp) {
    option (google.api.http) = {
      get: "/api/v1/notification/list"
    };
  }

  rpc DefaultTemplate(DefaultTemplateReq) returns (DefaultTemplateResp) {
    option (google.api.http) = {
      get: "/api/v1/notification/default-template"
    };
  }
}

// Notifications is a list of provider's ids to send notification to.
message Notification {
  string id = 1;
  string name = 2;
  string integration_type = 3;
  string integration_id = 4;
  repeated string recipients = 5;
  // one notification can only handle one type of event, because template depends on it
  string event_type = 6;
  string template = 7;
  oneof config {
    EmailConfig email = 8;
    WebhookConfig webhook = 9; 
    SyslogConfig syslog = 10;
  }
  string central_cs_url = 11;
  string cs_cluster_id = 12;
  string cs_cluster_name = 13;
  string own_cs_url = 14;
}

message EmailConfig {
  string subject_template = 1;
}

message WebhookConfig {
  map<string,string> headers = 1;
  string path = 2;
}

message CreateNotificationResp {
  string id = 1;
}

message ReadNotificationReq {
  string id = 1;
}

message ReadNotificationResp {
  Notification notification = 1;
  bool deleted = 2;
}

message DeleteNotificationReq {
  string id = 1;
}

message ListNotificationReq {
  string order = 1;
  string integration_id = 2;
  string event_type = 3;
}

message ListNotificationResp {
  repeated Notification notifications = 1;
}

message SyslogConfig {
}

message DefaultTemplateReq {
  string integration_type = 1;
  string event_type = 2;
}

message DefaultTemplateResp {
  string template = 1;
}
