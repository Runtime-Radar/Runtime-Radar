// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: runtime_history.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	api "github.com/runtime-radar/runtime-radar/event-processor/api"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRuntimeEventSliceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	SliceSize     uint32                 `protobuf:"varint,3,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimeEventSliceReq) Reset() {
	*x = ListRuntimeEventSliceReq{}
	mi := &file_runtime_history_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimeEventSliceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimeEventSliceReq) ProtoMessage() {}

func (x *ListRuntimeEventSliceReq) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_history_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimeEventSliceReq.ProtoReflect.Descriptor instead.
func (*ListRuntimeEventSliceReq) Descriptor() ([]byte, []int) {
	return file_runtime_history_proto_rawDescGZIP(), []int{0}
}

func (x *ListRuntimeEventSliceReq) GetCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *ListRuntimeEventSliceReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ListRuntimeEventSliceReq) GetSliceSize() uint32 {
	if x != nil {
		return x.SliceSize
	}
	return 0
}

type RuntimeFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// event_type represents the type of runtime event registered in the system.
	// Possible values are UNDEF, PROCESS_EXEC, PROCESS_EXIT, PROCESS_KPROBE, PROCESS_TRACEPOINT, PROCESS_LOADER and PROCESS_UPROBE
	EventType                    []string `protobuf:"bytes,1,rep,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	KprobeFunctionName           []string `protobuf:"bytes,2,rep,name=kprobe_function_name,json=kprobeFunctionName,proto3" json:"kprobe_function_name,omitempty"`
	ProcessPodNamespace          []string `protobuf:"bytes,3,rep,name=process_pod_namespace,json=processPodNamespace,proto3" json:"process_pod_namespace,omitempty"`
	ProcessPodName               []string `protobuf:"bytes,4,rep,name=process_pod_name,json=processPodName,proto3" json:"process_pod_name,omitempty"`
	NodeName                     []string `protobuf:"bytes,5,rep,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProcessPodContainerName      []string `protobuf:"bytes,6,rep,name=process_pod_container_name,json=processPodContainerName,proto3" json:"process_pod_container_name,omitempty"`
	ProcessPodContainerImageName []string `protobuf:"bytes,7,rep,name=process_pod_container_image_name,json=processPodContainerImageName,proto3" json:"process_pod_container_image_name,omitempty"`
	ProcessBinary                []string `protobuf:"bytes,8,rep,name=process_binary,json=processBinary,proto3" json:"process_binary,omitempty"`
	ProcessArguments             []string `protobuf:"bytes,9,rep,name=process_arguments,json=processArguments,proto3" json:"process_arguments,omitempty"`
	Period                       *Period  `protobuf:"bytes,10,opt,name=period,proto3" json:"period,omitempty"`
	HasThreats                   *bool    `protobuf:"varint,11,opt,name=has_threats,json=hasThreats,proto3,oneof" json:"has_threats,omitempty"`
	// Process's execution identifier. This field does not support globs.
	ProcessExecId string `protobuf:"bytes,12,opt,name=process_exec_id,json=processExecId,proto3" json:"process_exec_id,omitempty"`
	// Process parent's execution identifier. This field does not support globs.
	ProcessParentExecId string `protobuf:"bytes,13,opt,name=process_parent_exec_id,json=processParentExecId,proto3" json:"process_parent_exec_id,omitempty"`
	// Identifiers of detectors that have detected threats. This field does not support globs.
	ThreatsDetectors []string `protobuf:"bytes,14,rep,name=threats_detectors,json=threatsDetectors,proto3" json:"threats_detectors,omitempty"`
	// Identifiers of worked rules. This field does not support globs.
	Rules         []string `protobuf:"bytes,15,rep,name=rules,proto3" json:"rules,omitempty"`
	HasIncident   *bool    `protobuf:"varint,16,opt,name=has_incident,json=hasIncident,proto3,oneof" json:"has_incident,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeFilter) Reset() {
	*x = RuntimeFilter{}
	mi := &file_runtime_history_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeFilter) ProtoMessage() {}

func (x *RuntimeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_history_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeFilter.ProtoReflect.Descriptor instead.
func (*RuntimeFilter) Descriptor() ([]byte, []int) {
	return file_runtime_history_proto_rawDescGZIP(), []int{1}
}

func (x *RuntimeFilter) GetEventType() []string {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *RuntimeFilter) GetKprobeFunctionName() []string {
	if x != nil {
		return x.KprobeFunctionName
	}
	return nil
}

func (x *RuntimeFilter) GetProcessPodNamespace() []string {
	if x != nil {
		return x.ProcessPodNamespace
	}
	return nil
}

func (x *RuntimeFilter) GetProcessPodName() []string {
	if x != nil {
		return x.ProcessPodName
	}
	return nil
}

func (x *RuntimeFilter) GetNodeName() []string {
	if x != nil {
		return x.NodeName
	}
	return nil
}

func (x *RuntimeFilter) GetProcessPodContainerName() []string {
	if x != nil {
		return x.ProcessPodContainerName
	}
	return nil
}

func (x *RuntimeFilter) GetProcessPodContainerImageName() []string {
	if x != nil {
		return x.ProcessPodContainerImageName
	}
	return nil
}

func (x *RuntimeFilter) GetProcessBinary() []string {
	if x != nil {
		return x.ProcessBinary
	}
	return nil
}

func (x *RuntimeFilter) GetProcessArguments() []string {
	if x != nil {
		return x.ProcessArguments
	}
	return nil
}

func (x *RuntimeFilter) GetPeriod() *Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *RuntimeFilter) GetHasThreats() bool {
	if x != nil && x.HasThreats != nil {
		return *x.HasThreats
	}
	return false
}

func (x *RuntimeFilter) GetProcessExecId() string {
	if x != nil {
		return x.ProcessExecId
	}
	return ""
}

func (x *RuntimeFilter) GetProcessParentExecId() string {
	if x != nil {
		return x.ProcessParentExecId
	}
	return ""
}

func (x *RuntimeFilter) GetThreatsDetectors() []string {
	if x != nil {
		return x.ThreatsDetectors
	}
	return nil
}

func (x *RuntimeFilter) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *RuntimeFilter) GetHasIncident() bool {
	if x != nil && x.HasIncident != nil {
		return *x.HasIncident
	}
	return false
}

type FilterRuntimeEventSliceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cursor        *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	SliceSize     uint32                 `protobuf:"varint,3,opt,name=slice_size,json=sliceSize,proto3" json:"slice_size,omitempty"`
	Filter        *RuntimeFilter         `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRuntimeEventSliceReq) Reset() {
	*x = FilterRuntimeEventSliceReq{}
	mi := &file_runtime_history_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRuntimeEventSliceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRuntimeEventSliceReq) ProtoMessage() {}

func (x *FilterRuntimeEventSliceReq) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_history_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRuntimeEventSliceReq.ProtoReflect.Descriptor instead.
func (*FilterRuntimeEventSliceReq) Descriptor() ([]byte, []int) {
	return file_runtime_history_proto_rawDescGZIP(), []int{2}
}

func (x *FilterRuntimeEventSliceReq) GetCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.Cursor
	}
	return nil
}

func (x *FilterRuntimeEventSliceReq) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *FilterRuntimeEventSliceReq) GetSliceSize() uint32 {
	if x != nil {
		return x.SliceSize
	}
	return 0
}

func (x *FilterRuntimeEventSliceReq) GetFilter() *RuntimeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListRuntimeEventSliceResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RuntimeEvents []*api.RuntimeEvent    `protobuf:"bytes,1,rep,name=runtime_events,json=runtimeEvents,proto3" json:"runtime_events,omitempty"`
	LeftCursor    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=left_cursor,json=leftCursor,proto3" json:"left_cursor,omitempty"`
	RightCursor   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=right_cursor,json=rightCursor,proto3" json:"right_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRuntimeEventSliceResp) Reset() {
	*x = ListRuntimeEventSliceResp{}
	mi := &file_runtime_history_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRuntimeEventSliceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRuntimeEventSliceResp) ProtoMessage() {}

func (x *ListRuntimeEventSliceResp) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_history_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRuntimeEventSliceResp.ProtoReflect.Descriptor instead.
func (*ListRuntimeEventSliceResp) Descriptor() ([]byte, []int) {
	return file_runtime_history_proto_rawDescGZIP(), []int{3}
}

func (x *ListRuntimeEventSliceResp) GetRuntimeEvents() []*api.RuntimeEvent {
	if x != nil {
		return x.RuntimeEvents
	}
	return nil
}

func (x *ListRuntimeEventSliceResp) GetLeftCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.LeftCursor
	}
	return nil
}

func (x *ListRuntimeEventSliceResp) GetRightCursor() *timestamppb.Timestamp {
	if x != nil {
		return x.RightCursor
	}
	return nil
}

type ReadRuntimeEventReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRuntimeEventReq) Reset() {
	*x = ReadRuntimeEventReq{}
	mi := &file_runtime_history_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRuntimeEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRuntimeEventReq) ProtoMessage() {}

func (x *ReadRuntimeEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_history_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRuntimeEventReq.ProtoReflect.Descriptor instead.
func (*ReadRuntimeEventReq) Descriptor() ([]byte, []int) {
	return file_runtime_history_proto_rawDescGZIP(), []int{4}
}

func (x *ReadRuntimeEventReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_runtime_history_proto protoreflect.FileDescriptor

const file_runtime_history_proto_rawDesc = "" +
	"\n" +
	"\x15runtime_history.proto\x12\x0fruntime_history\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#event-processor/runtime_event.proto\x1a\fcommon.proto\"\x8b\x01\n" +
	"\x18ListRuntimeEventSliceReq\x122\n" +
	"\x06cursor\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06cursor\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\x12\x1d\n" +
	"\n" +
	"slice_size\x18\x03 \x01(\rR\tsliceSize\"\xeb\x05\n" +
	"\rRuntimeFilter\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x03(\tR\teventType\x120\n" +
	"\x14kprobe_function_name\x18\x02 \x03(\tR\x12kprobeFunctionName\x122\n" +
	"\x15process_pod_namespace\x18\x03 \x03(\tR\x13processPodNamespace\x12(\n" +
	"\x10process_pod_name\x18\x04 \x03(\tR\x0eprocessPodName\x12\x1b\n" +
	"\tnode_name\x18\x05 \x03(\tR\bnodeName\x12;\n" +
	"\x1aprocess_pod_container_name\x18\x06 \x03(\tR\x17processPodContainerName\x12F\n" +
	" process_pod_container_image_name\x18\a \x03(\tR\x1cprocessPodContainerImageName\x12%\n" +
	"\x0eprocess_binary\x18\b \x03(\tR\rprocessBinary\x12+\n" +
	"\x11process_arguments\x18\t \x03(\tR\x10processArguments\x12&\n" +
	"\x06period\x18\n" +
	" \x01(\v2\x0e.common.PeriodR\x06period\x12$\n" +
	"\vhas_threats\x18\v \x01(\bH\x00R\n" +
	"hasThreats\x88\x01\x01\x12&\n" +
	"\x0fprocess_exec_id\x18\f \x01(\tR\rprocessExecId\x123\n" +
	"\x16process_parent_exec_id\x18\r \x01(\tR\x13processParentExecId\x12+\n" +
	"\x11threats_detectors\x18\x0e \x03(\tR\x10threatsDetectors\x12\x14\n" +
	"\x05rules\x18\x0f \x03(\tR\x05rules\x12&\n" +
	"\fhas_incident\x18\x10 \x01(\bH\x01R\vhasIncident\x88\x01\x01B\x0e\n" +
	"\f_has_threatsB\x0f\n" +
	"\r_has_incident\"\xc5\x01\n" +
	"\x1aFilterRuntimeEventSliceReq\x122\n" +
	"\x06cursor\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06cursor\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\x12\x1d\n" +
	"\n" +
	"slice_size\x18\x03 \x01(\rR\tsliceSize\x126\n" +
	"\x06filter\x18\x04 \x01(\v2\x1e.runtime_history.RuntimeFilterR\x06filter\"\xdb\x01\n" +
	"\x19ListRuntimeEventSliceResp\x12B\n" +
	"\x0eruntime_events\x18\x01 \x03(\v2\x1b.runtime_event.RuntimeEventR\rruntimeEvents\x12;\n" +
	"\vleft_cursor\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"leftCursor\x12=\n" +
	"\fright_cursor\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vrightCursor\"%\n" +
	"\x13ReadRuntimeEventReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2\xd4\x03\n" +
	"\x0eRuntimeHistory\x12m\n" +
	"\x04Read\x12$.runtime_history.ReadRuntimeEventReq\x1a\x1b.runtime_event.RuntimeEvent\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/runtime-event/{id}\x12\x9f\x01\n" +
	"\x15ListRuntimeEventSlice\x12).runtime_history.ListRuntimeEventSliceReq\x1a*.runtime_history.ListRuntimeEventSliceResp\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/runtime-event/slice/{direction}\x12\xb0\x01\n" +
	"\x17FilterRuntimeEventSlice\x12+.runtime_history.FilterRuntimeEventSliceReq\x1a*.runtime_history.ListRuntimeEventSliceResp\"<\x82\xd3\xe4\x93\x026:\x01*\"1/api/v1/runtime-event/by-filter/slice/{direction}B(\x92A\x1e\x12\x1c\n" +
	"\x1aHistory Runtime Events APIZ\x05./apib\x06proto3"

var (
	file_runtime_history_proto_rawDescOnce sync.Once
	file_runtime_history_proto_rawDescData []byte
)

func file_runtime_history_proto_rawDescGZIP() []byte {
	file_runtime_history_proto_rawDescOnce.Do(func() {
		file_runtime_history_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runtime_history_proto_rawDesc), len(file_runtime_history_proto_rawDesc)))
	})
	return file_runtime_history_proto_rawDescData
}

var file_runtime_history_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_runtime_history_proto_goTypes = []any{
	(*ListRuntimeEventSliceReq)(nil),   // 0: runtime_history.ListRuntimeEventSliceReq
	(*RuntimeFilter)(nil),              // 1: runtime_history.RuntimeFilter
	(*FilterRuntimeEventSliceReq)(nil), // 2: runtime_history.FilterRuntimeEventSliceReq
	(*ListRuntimeEventSliceResp)(nil),  // 3: runtime_history.ListRuntimeEventSliceResp
	(*ReadRuntimeEventReq)(nil),        // 4: runtime_history.ReadRuntimeEventReq
	(*timestamppb.Timestamp)(nil),      // 5: google.protobuf.Timestamp
	(*Period)(nil),                     // 6: common.Period
	(*api.RuntimeEvent)(nil),           // 7: runtime_event.RuntimeEvent
}
var file_runtime_history_proto_depIdxs = []int32{
	5,  // 0: runtime_history.ListRuntimeEventSliceReq.cursor:type_name -> google.protobuf.Timestamp
	6,  // 1: runtime_history.RuntimeFilter.period:type_name -> common.Period
	5,  // 2: runtime_history.FilterRuntimeEventSliceReq.cursor:type_name -> google.protobuf.Timestamp
	1,  // 3: runtime_history.FilterRuntimeEventSliceReq.filter:type_name -> runtime_history.RuntimeFilter
	7,  // 4: runtime_history.ListRuntimeEventSliceResp.runtime_events:type_name -> runtime_event.RuntimeEvent
	5,  // 5: runtime_history.ListRuntimeEventSliceResp.left_cursor:type_name -> google.protobuf.Timestamp
	5,  // 6: runtime_history.ListRuntimeEventSliceResp.right_cursor:type_name -> google.protobuf.Timestamp
	4,  // 7: runtime_history.RuntimeHistory.Read:input_type -> runtime_history.ReadRuntimeEventReq
	0,  // 8: runtime_history.RuntimeHistory.ListRuntimeEventSlice:input_type -> runtime_history.ListRuntimeEventSliceReq
	2,  // 9: runtime_history.RuntimeHistory.FilterRuntimeEventSlice:input_type -> runtime_history.FilterRuntimeEventSliceReq
	7,  // 10: runtime_history.RuntimeHistory.Read:output_type -> runtime_event.RuntimeEvent
	3,  // 11: runtime_history.RuntimeHistory.ListRuntimeEventSlice:output_type -> runtime_history.ListRuntimeEventSliceResp
	3,  // 12: runtime_history.RuntimeHistory.FilterRuntimeEventSlice:output_type -> runtime_history.ListRuntimeEventSliceResp
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_runtime_history_proto_init() }
func file_runtime_history_proto_init() {
	if File_runtime_history_proto != nil {
		return
	}
	file_common_proto_init()
	file_runtime_history_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runtime_history_proto_rawDesc), len(file_runtime_history_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_runtime_history_proto_goTypes,
		DependencyIndexes: file_runtime_history_proto_depIdxs,
		MessageInfos:      file_runtime_history_proto_msgTypes,
	}.Build()
	File_runtime_history_proto = out.File
	file_runtime_history_proto_goTypes = nil
	file_runtime_history_proto_depIdxs = nil
}
