{
  "swagger": "2.0",
  "info": {
    "title": "History Stats API",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Stats"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/stats/event/count": {
      "get": {
        "operationId": "Stats_CountEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonCounter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/event/latest-severest": {
      "get": {
        "operationId": "Stats_GetLatestSeverestEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/historyEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/incident/count": {
      "get": {
        "operationId": "Stats_CountIncidents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statsIncidentCounters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/severity/count": {
      "get": {
        "operationId": "Stats_CountSeverities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statsSeverityCounters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/vulnerability/count": {
      "get": {
        "operationId": "Stats_CountVulnerabilities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonCounter"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/vulnerability/graph": {
      "get": {
        "operationId": "Stats_GetVulnerabilitiesGraph",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statsGraph"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    },
    "/api/v1/stats/vulnerability/rating": {
      "get": {
        "operationId": "Stats_GetVulnerabilitiesRating",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/statsVulnerabilitiesRatingResp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "period.from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "period.to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "count",
            "description": "top-N items should be returned",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Stats"
        ]
      }
    }
  },
  "definitions": {
    "ActionKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "ActionResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "AffectedVersionsRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "GraphPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MetadataAffectedVersions": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "range": {
          "$ref": "#/definitions/AffectedVersionsRange"
        }
      }
    },
    "VulnerabilityScoreMethod": {
      "type": "string",
      "enum": [
        "SCORE_METHOD_NULL",
        "SCORE_METHOD_CVSSV2",
        "SCORE_METHOD_CVSSV3",
        "SCORE_METHOD_CVSSV31",
        "SCORE_METHOD_OWASP",
        "SCORE_METHOD_OTHER"
      ],
      "default": "SCORE_METHOD_NULL"
    },
    "authenticationv1UserInfo": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "The name that uniquely identifies this user among all active users.\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "A unique value that identifies this user across time. If this user is\ndeleted and another user by the same name is added, they will have\ndifferent UIDs.\n+optional"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The names of groups this user is a part of.\n+optional"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1ExtraValue"
          },
          "title": "Any additional information provided by the authenticator.\n+optional"
        }
      },
      "description": "UserInfo holds the information about the user needed to implement the\nuser.Info interface."
    },
    "commonCounter": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "commonPeriod": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "commonSort": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "historyAction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "requestUid": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/ActionResource"
        },
        "requestResource": {
          "$ref": "#/definitions/ActionResource"
        },
        "kind": {
          "$ref": "#/definitions/ActionKind"
        },
        "requestKind": {
          "$ref": "#/definitions/ActionKind"
        },
        "subresource": {
          "type": "string"
        },
        "requestSubresource": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "userInfo": {
          "$ref": "#/definitions/historyActionUserInfo"
        },
        "eventId": {
          "type": "string"
        },
        "admissionRequest": {
          "$ref": "#/definitions/v1AdmissionRequest",
          "title": "this field is only here for creating. it's not presented in Read result"
        },
        "threats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/historyThreat"
          },
          "title": "failed admission controller's detectors"
        }
      }
    },
    "historyActionUserInfo": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "historyComponent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "vulnerabilities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/historyVulnerability"
          }
        },
        "eventId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/historyComponentType"
        },
        "publisher": {
          "type": "string"
        },
        "purl": {
          "type": "string"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/historyComponentLicense"
          }
        }
      }
    },
    "historyComponentLicense": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "historyComponentType": {
      "type": "string",
      "enum": [
        "TYPE_NULL",
        "TYPE_APPLICATION",
        "TYPE_FRAMEWORK",
        "TYPE_LIBRARY",
        "TYPE_OPERATING_SYSTEM",
        "TYPE_DEVICE",
        "TYPE_FILE",
        "TYPE_CONTAINER",
        "TYPE_FIRMWARE"
      ],
      "default": "TYPE_NULL"
    },
    "historyEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "registeredAt": {
          "type": "string",
          "format": "date-time"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "digest": {
          "type": "string"
        },
        "registry": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/historyEventMetadata"
        },
        "imageName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "incident": {
          "$ref": "#/definitions/historyIncident"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/historyComponent"
          }
        },
        "iacPath": {
          "type": "string",
          "title": "scanned path in case when type == scan_iac"
        },
        "resourceType": {
          "$ref": "#/definitions/historyIACResourceType",
          "title": "usable only for type == scan_iac"
        },
        "userId": {
          "type": "string",
          "title": "uuid of the user who initiated the scan"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/historyAction"
          },
          "title": "actions reviewed by admission controller. not empty when type == admission_review"
        }
      }
    },
    "historyEventMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "scanDuration": {
          "type": "integer",
          "format": "int64",
          "title": "scan duration in seconds"
        }
      }
    },
    "historyIACResourceType": {
      "type": "string",
      "enum": [
        "NONE",
        "DOCKERFILE",
        "KUBERNETES_MANIFEST",
        "HELM_CHART"
      ],
      "default": "NONE"
    },
    "historyIncident": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "blockBy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "IDs of blocking rules"
        },
        "notifyBy": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "IDs of notifying rules"
        },
        "severity": {
          "type": "string"
        },
        "eventId": {
          "type": "string"
        }
      }
    },
    "historyThreat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "detector": {
          "$ref": "#/definitions/historyThreatDetector"
        },
        "actionId": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      }
    },
    "historyThreatDetector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        }
      }
    },
    "historyVulnerability": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cve": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "componentId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "scoreMethod": {
          "$ref": "#/definitions/VulnerabilityScoreMethod"
        },
        "metadata": {
          "$ref": "#/definitions/historyVulnerabilityMetadata"
        },
        "category": {
          "type": "string"
        },
        "vector": {
          "type": "string"
        }
      }
    },
    "historyVulnerabilityMetadata": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "references": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "affectedVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/MetadataAffectedVersions"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "runtimeRawExtension": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object.\n\nTODO: Determine how to detect ContentType and ContentEncoding of 'Raw' data."
        }
      },
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned\nstruct, and Object in your internal struct. You also need to register your\nvarious plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into\nyour external MyAPIObject. That causes the raw JSON to be stored, but not unpacked.\nThe next step is to copy (using pkg/conversion) into the internal struct. The runtime\npackage's DefaultScheme has conversion functions installed which will unpack the\nJSON stored in RawExtension, turning it into the correct object type, and storing it\nin the Object. (TODO: In the case where the object is of an unknown type, a\nruntime.Unknown object will be created and stored.)\n\n+k8s:deepcopy-gen=true\n+protobuf=true\n+k8s:openapi-gen=true"
    },
    "statsGraph": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/GraphPoint"
          },
          "title": "It's guaranteed that len of response will be equal to number of days passed in request including current day"
        }
      }
    },
    "statsIncidentCounters": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "withNotify": {
          "type": "integer",
          "format": "int32"
        },
        "withBlock": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "statsSeverityCounters": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statsSeverityCountersCounter"
          }
        }
      }
    },
    "statsSeverityCountersCounter": {
      "type": "object",
      "properties": {
        "severity": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "statsVulnerabilitiesRatingResp": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/statsVulnerabilitiesRatingRespCounter"
          },
          "title": "rating of vulnerabilities sorted by severity first and appearances (count) second"
        }
      }
    },
    "statsVulnerabilitiesRatingRespCounter": {
      "type": "object",
      "properties": {
        "cve": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1AdmissionRequest": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are\notherwise identical (parallel requests, requests when earlier requests did not modify etc)\nThe UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request.\nIt is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging."
        },
        "kind": {
          "$ref": "#/definitions/v1GroupVersionKind",
          "title": "Kind is the fully-qualified type of object being submitted (for example, v1.Pod or autoscaling.v1.Scale)"
        },
        "resource": {
          "$ref": "#/definitions/v1GroupVersionResource",
          "title": "Resource is the fully-qualified resource being requested (for example, v1.pods)"
        },
        "subResource": {
          "type": "string",
          "title": "SubResource is the subresource being requested, if any (for example, \"status\" or \"scale\")\n+optional"
        },
        "requestKind": {
          "$ref": "#/definitions/v1GroupVersionKind",
          "description": "RequestKind is the fully-qualified type of the original API request (for example, v1.Pod or autoscaling.v1.Scale).\nIf this is specified and differs from the value in \"kind\", an equivalent match and conversion was performed.\n\nFor example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of\n`apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`,\nan API request to apps/v1beta1 deployments would be converted and sent to the webhook\nwith `kind: {group:\"apps\", version:\"v1\", kind:\"Deployment\"}` (matching the rule the webhook registered for),\nand `requestKind: {group:\"apps\", version:\"v1beta1\", kind:\"Deployment\"}` (indicating the kind of the original API request).\n\nSee documentation for the \"matchPolicy\" field in the webhook configuration type for more details.\n+optional"
        },
        "requestResource": {
          "$ref": "#/definitions/v1GroupVersionResource",
          "description": "RequestResource is the fully-qualified resource of the original API request (for example, v1.pods).\nIf this is specified and differs from the value in \"resource\", an equivalent match and conversion was performed.\n\nFor example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of\n`apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`,\nan API request to apps/v1beta1 deployments would be converted and sent to the webhook\nwith `resource: {group:\"apps\", version:\"v1\", resource:\"deployments\"}` (matching the resource the webhook registered for),\nand `requestResource: {group:\"apps\", version:\"v1beta1\", resource:\"deployments\"}` (indicating the resource of the original API request).\n\nSee documentation for the \"matchPolicy\" field in the webhook configuration type.\n+optional"
        },
        "requestSubResource": {
          "type": "string",
          "title": "RequestSubResource is the name of the subresource of the original API request, if any (for example, \"status\" or \"scale\")\nIf this is specified and differs from the value in \"subResource\", an equivalent match and conversion was performed.\nSee documentation for the \"matchPolicy\" field in the webhook configuration type.\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and\nrely on the server to generate the name.  If that is the case, this field will contain an empty string.\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace is the namespace associated with the request (if any).\n+optional"
        },
        "operation": {
          "type": "string",
          "description": "Operation is the operation being performed. This may be different than the operation\nrequested. e.g. a patch can result in either a CREATE or UPDATE Operation."
        },
        "userInfo": {
          "$ref": "#/definitions/authenticationv1UserInfo",
          "title": "UserInfo is information about the requesting user"
        },
        "object": {
          "$ref": "#/definitions/runtimeRawExtension",
          "title": "Object is the object from the incoming request.\n+optional"
        },
        "oldObject": {
          "$ref": "#/definitions/runtimeRawExtension",
          "title": "OldObject is the existing object. Only populated for DELETE and UPDATE requests.\n+optional"
        },
        "dryRun": {
          "type": "boolean",
          "title": "DryRun indicates that modifications will definitely not be persisted for this request.\nDefaults to false.\n+optional"
        },
        "options": {
          "$ref": "#/definitions/runtimeRawExtension",
          "title": "Options is the operation option structure of the operation being performed.\ne.g. `meta.k8s.io/v1.DeleteOptions` or `meta.k8s.io/v1.CreateOptions`. This may be\ndifferent than the options the caller provided. e.g. for a patch request the performed\nOperation might be a CREATE, in which case the Options will a\n`meta.k8s.io/v1.CreateOptions` even though the caller provided `meta.k8s.io/v1.PatchOptions`.\n+optional"
        }
      },
      "description": "AdmissionRequest describes the admission.Attributes for the admission request."
    },
    "v1ExtraValue": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "items, if empty, will result in an empty slice",
      "title": "ExtraValue masks the value so protobuf can generate\n+protobuf.nullable=true\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1GroupVersionKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupVersionKind unambiguously identifies a kind.  It doesn't anonymously include GroupVersion\nto avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling"
    },
    "v1GroupVersionResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion\nto avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling"
    }
  }
}
