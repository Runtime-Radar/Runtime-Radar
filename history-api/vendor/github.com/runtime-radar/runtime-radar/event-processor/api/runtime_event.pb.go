// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: runtime_event.proto

package api

import (
	tetragon "github.com/cilium/tetragon/api/v1/tetragon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id (as UUID) will be generated by event-processor, so that it can be used in notifier templates
	// when sending notifications, for building URL pointing to a particular event, or as a supplementary info
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// TODO: tetragon_version is hardcoded on event_processor side, but it is assumed that it will be passed
	// right from the runtime_monitor
	TetragonVersion  string                      `protobuf:"bytes,2,opt,name=tetragon_version,json=tetragonVersion,proto3" json:"tetragon_version,omitempty"`
	Event            *tetragon.GetEventsResponse `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Threats          []*Threat                   `protobuf:"bytes,4,rep,name=threats,proto3" json:"threats,omitempty"`
	DetectErrors     []*DetectError              `protobuf:"bytes,5,rep,name=detect_errors,json=detectErrors,proto3" json:"detect_errors,omitempty"`
	IsIncident       bool                        `protobuf:"varint,6,opt,name=is_incident,json=isIncident,proto3" json:"is_incident,omitempty"`
	IncidentSeverity string                      `protobuf:"bytes,7,opt,name=incident_severity,json=incidentSeverity,proto3" json:"incident_severity,omitempty"`
	BlockBy          []string                    `protobuf:"bytes,8,rep,name=block_by,json=blockBy,proto3" json:"block_by,omitempty"`
	NotifyBy         []string                    `protobuf:"bytes,9,rep,name=notify_by,json=notifyBy,proto3" json:"notify_by,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RuntimeEvent) Reset() {
	*x = RuntimeEvent{}
	mi := &file_runtime_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeEvent) ProtoMessage() {}

func (x *RuntimeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeEvent.ProtoReflect.Descriptor instead.
func (*RuntimeEvent) Descriptor() ([]byte, []int) {
	return file_runtime_event_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RuntimeEvent) GetTetragonVersion() string {
	if x != nil {
		return x.TetragonVersion
	}
	return ""
}

func (x *RuntimeEvent) GetEvent() *tetragon.GetEventsResponse {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RuntimeEvent) GetThreats() []*Threat {
	if x != nil {
		return x.Threats
	}
	return nil
}

func (x *RuntimeEvent) GetDetectErrors() []*DetectError {
	if x != nil {
		return x.DetectErrors
	}
	return nil
}

func (x *RuntimeEvent) GetIsIncident() bool {
	if x != nil {
		return x.IsIncident
	}
	return false
}

func (x *RuntimeEvent) GetIncidentSeverity() string {
	if x != nil {
		return x.IncidentSeverity
	}
	return ""
}

func (x *RuntimeEvent) GetBlockBy() []string {
	if x != nil {
		return x.BlockBy
	}
	return nil
}

func (x *RuntimeEvent) GetNotifyBy() []string {
	if x != nil {
		return x.NotifyBy
	}
	return nil
}

type Threat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detector      *Detector              `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	Severity      string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Threat) Reset() {
	*x = Threat{}
	mi := &file_runtime_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Threat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Threat) ProtoMessage() {}

func (x *Threat) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Threat.ProtoReflect.Descriptor instead.
func (*Threat) Descriptor() ([]byte, []int) {
	return file_runtime_event_proto_rawDescGZIP(), []int{1}
}

func (x *Threat) GetDetector() *Detector {
	if x != nil {
		return x.Detector
	}
	return nil
}

func (x *Threat) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

type DetectError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detector      *Detector              `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectError) Reset() {
	*x = DetectError{}
	mi := &file_runtime_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectError) ProtoMessage() {}

func (x *DetectError) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectError.ProtoReflect.Descriptor instead.
func (*DetectError) Descriptor() ([]byte, []int) {
	return file_runtime_event_proto_rawDescGZIP(), []int{2}
}

func (x *DetectError) GetDetector() *Detector {
	if x != nil {
		return x.Detector
	}
	return nil
}

func (x *DetectError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_runtime_event_proto protoreflect.FileDescriptor

const file_runtime_event_proto_rawDesc = "" +
	"\n" +
	"\x13runtime_event.proto\x12\rruntime_event\x1a\x15tetragon/events.proto\x1a\x0edetector.proto\"\xf4\x02\n" +
	"\fRuntimeEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x10tetragon_version\x18\x02 \x01(\tR\x0ftetragonVersion\x121\n" +
	"\x05event\x18\x03 \x01(\v2\x1b.tetragon.GetEventsResponseR\x05event\x12/\n" +
	"\athreats\x18\x04 \x03(\v2\x15.runtime_event.ThreatR\athreats\x12?\n" +
	"\rdetect_errors\x18\x05 \x03(\v2\x1a.runtime_event.DetectErrorR\fdetectErrors\x12\x1f\n" +
	"\vis_incident\x18\x06 \x01(\bR\n" +
	"isIncident\x12+\n" +
	"\x11incident_severity\x18\a \x01(\tR\x10incidentSeverity\x12\x19\n" +
	"\bblock_by\x18\b \x03(\tR\ablockBy\x12\x1b\n" +
	"\tnotify_by\x18\t \x03(\tR\bnotifyBy\"T\n" +
	"\x06Threat\x12.\n" +
	"\bdetector\x18\x01 \x01(\v2\x12.detector.DetectorR\bdetector\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\"S\n" +
	"\vDetectError\x12.\n" +
	"\bdetector\x18\x01 \x01(\v2\x12.detector.DetectorR\bdetector\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05errorB\aZ\x05./apib\x06proto3"

var (
	file_runtime_event_proto_rawDescOnce sync.Once
	file_runtime_event_proto_rawDescData []byte
)

func file_runtime_event_proto_rawDescGZIP() []byte {
	file_runtime_event_proto_rawDescOnce.Do(func() {
		file_runtime_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runtime_event_proto_rawDesc), len(file_runtime_event_proto_rawDesc)))
	})
	return file_runtime_event_proto_rawDescData
}

var file_runtime_event_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_runtime_event_proto_goTypes = []any{
	(*RuntimeEvent)(nil),               // 0: runtime_event.RuntimeEvent
	(*Threat)(nil),                     // 1: runtime_event.Threat
	(*DetectError)(nil),                // 2: runtime_event.DetectError
	(*tetragon.GetEventsResponse)(nil), // 3: tetragon.GetEventsResponse
	(*Detector)(nil),                   // 4: detector.Detector
}
var file_runtime_event_proto_depIdxs = []int32{
	3, // 0: runtime_event.RuntimeEvent.event:type_name -> tetragon.GetEventsResponse
	1, // 1: runtime_event.RuntimeEvent.threats:type_name -> runtime_event.Threat
	2, // 2: runtime_event.RuntimeEvent.detect_errors:type_name -> runtime_event.DetectError
	4, // 3: runtime_event.Threat.detector:type_name -> detector.Detector
	4, // 4: runtime_event.DetectError.detector:type_name -> detector.Detector
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_runtime_event_proto_init() }
func file_runtime_event_proto_init() {
	if File_runtime_event_proto != nil {
		return
	}
	file_detector_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runtime_event_proto_rawDesc), len(file_runtime_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runtime_event_proto_goTypes,
		DependencyIndexes: file_runtime_event_proto_depIdxs,
		MessageInfos:      file_runtime_event_proto_msgTypes,
	}.Build()
	File_runtime_event_proto = out.File
	file_runtime_event_proto_goTypes = nil
	file_runtime_event_proto_depIdxs = nil
}
