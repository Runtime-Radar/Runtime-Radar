syntax = "proto3";
package detector;

import "google/protobuf/empty.proto";
import "tetragon/events.proto";

option go_package = "./api";

// Detector service definition.
// go:plugin type=plugin version=1
service Detector {
  rpc Info(InfoReq) returns (InfoResp) {}
  rpc Detect(DetectReq) returns (DetectResp) {}
}

message DetectReq {
  tetragon.GetEventsResponse event = 1;
}

message DetectResp {
  string id = 1;
  string name = 2;
  string description = 3;
  uint32 version = 4;
  string author = 5;
  string contact = 6;
  // license is not added to detector response because it's supposed that
  // it can include the whole text of the License Agreement, which may add
  // significant overhead to communication flow.
  // string license = 7;
  reserved 7;

  enum Severity {
    NONE = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
    CRITICAL = 4;
  }
  Severity severity = 8;
}

message InfoReq {}

message InfoResp {
  string id = 1;
  string name = 2;
  string description = 3;
  uint32 version = 4;
  string author = 5;
  string contact = 6;
  string license = 7;
}
