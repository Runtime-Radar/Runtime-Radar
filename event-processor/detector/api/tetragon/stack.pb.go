// SPDX-License-Identifier: Apache-2.0
// Copyright Authors of Hubble

// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin v0.1.0
// 	protoc               v4.25.3
// source: tetragon/stack.proto

package tetragon

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StackAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address uint64 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *StackAddress) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *StackAddress) GetAddress() uint64 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *StackAddress) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type StackTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []*StackAddress `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *StackTrace) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *StackTrace) GetAddresses() []*StackAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type StackTraceLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *StackTraceLabel) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *StackTraceLabel) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StackTraceLabel) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type StackTraceNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  *StackAddress      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Count    uint64             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Labels   []*StackTraceLabel `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	Children []*StackTraceNode  `protobuf:"bytes,4,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *StackTraceNode) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *StackTraceNode) GetAddress() *StackAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StackTraceNode) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StackTraceNode) GetLabels() []*StackTraceLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *StackTraceNode) GetChildren() []*StackTraceNode {
	if x != nil {
		return x.Children
	}
	return nil
}
