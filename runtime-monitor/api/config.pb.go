// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: config.proto

// Package is called "runtime_config" in order to distinguish it from future more generic "config" package
// which could be used for keeping dynamic config interfaces exposed by cs_manager, however this is not yet implemented.

package api

import (
	tetragon "github.com/cilium/tetragon/api/v1/tetragon"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config        *Config_ConfigJSON     `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Config) GetConfig() *Config_ConfigJSON {
	if x != nil {
		return x.Config
	}
	return nil
}

type TracingPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Yaml          string                 `protobuf:"bytes,3,opt,name=yaml,proto3" json:"yaml,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracingPolicy) Reset() {
	*x = TracingPolicy{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingPolicy) ProtoMessage() {}

func (x *TracingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingPolicy.ProtoReflect.Descriptor instead.
func (*TracingPolicy) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *TracingPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TracingPolicy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TracingPolicy) GetYaml() string {
	if x != nil {
		return x.Yaml
	}
	return ""
}

func (x *TracingPolicy) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type Config_ConfigJSON struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	Version         string                    `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	TracingPolicies map[string]*TracingPolicy `protobuf:"bytes,2,rep,name=tracing_policies,json=tracingPolicies,proto3" json:"tracing_policies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tetragon options
	// ================
	// allow_list specifies a list of filters to apply to only return certain
	// events. If multiple filters are specified, at least one of them has to
	// match for an event to be included in the results.
	AllowList []*tetragon.Filter `protobuf:"bytes,4,rep,name=allow_list,json=allowList,proto3" json:"allow_list,omitempty"`
	// deny_list specifies a list of filters to apply to exclude certain events
	// from the results. If multiple filters are specified, at least one of
	// them has to match for an event to be excluded.
	// If both allow_list and deny_list are specified, the results contain the
	// set difference allow_list - deny_list.
	DenyList []*tetragon.Filter `protobuf:"bytes,5,rep,name=deny_list,json=denyList,proto3" json:"deny_list,omitempty"`
	// aggregation_options configures aggregation options for this request.
	// If this field is not set, responses will not be aggregated.
	// Note that currently only process_accept and process_connect events are
	// aggregated. Other events remain unaggregated.
	AggregationOptions *tetragon.AggregationOptions `protobuf:"bytes,6,opt,name=aggregation_options,json=aggregationOptions,proto3" json:"aggregation_options,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Config_ConfigJSON) Reset() {
	*x = Config_ConfigJSON{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_ConfigJSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_ConfigJSON) ProtoMessage() {}

func (x *Config_ConfigJSON) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_ConfigJSON.ProtoReflect.Descriptor instead.
func (*Config_ConfigJSON) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Config_ConfigJSON) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Config_ConfigJSON) GetTracingPolicies() map[string]*TracingPolicy {
	if x != nil {
		return x.TracingPolicies
	}
	return nil
}

func (x *Config_ConfigJSON) GetAllowList() []*tetragon.Filter {
	if x != nil {
		return x.AllowList
	}
	return nil
}

func (x *Config_ConfigJSON) GetDenyList() []*tetragon.Filter {
	if x != nil {
		return x.DenyList
	}
	return nil
}

func (x *Config_ConfigJSON) GetAggregationOptions() *tetragon.AggregationOptions {
	if x != nil {
		return x.AggregationOptions
	}
	return nil
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12\x0eruntime_config\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x15tetragon/events.proto\"\xfd\x03\n" +
	"\x06Config\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\x06config\x18\x04 \x01(\v2!.runtime_config.Config.ConfigJSONR\x06config\x1a\x9b\x03\n" +
	"\n" +
	"ConfigJSON\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12a\n" +
	"\x10tracing_policies\x18\x02 \x03(\v26.runtime_config.Config.ConfigJSON.TracingPoliciesEntryR\x0ftracingPolicies\x12/\n" +
	"\n" +
	"allow_list\x18\x04 \x03(\v2\x10.tetragon.FilterR\tallowList\x12-\n" +
	"\tdeny_list\x18\x05 \x03(\v2\x10.tetragon.FilterR\bdenyList\x12M\n" +
	"\x13aggregation_options\x18\x06 \x01(\v2\x1c.tetragon.AggregationOptionsR\x12aggregationOptions\x1aa\n" +
	"\x14TracingPoliciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.runtime_config.TracingPolicyR\x05value:\x028\x01J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04\"s\n" +
	"\rTracingPolicy\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04yaml\x18\x03 \x01(\tR\x04yaml\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled2\xd4\x01\n" +
	"\x10ConfigController\x12`\n" +
	"\x03Add\x12\x16.runtime_config.Config\x1a\x16.google.protobuf.Empty\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/api/v1/config/runtime-monitor\x12^\n" +
	"\x04Read\x12\x16.google.protobuf.Empty\x1a\x16.runtime_config.Config\"&\x82\xd3\xe4\x93\x02 \x12\x1e/api/v1/config/runtime-monitorB(\x92A\x1e\x12\x1c\n" +
	"\x1aRuntime Monitor Config APIZ\x05./apib\x06proto3"

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData []byte
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)))
	})
	return file_config_proto_rawDescData
}

var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_proto_goTypes = []any{
	(*Config)(nil),                      // 0: runtime_config.Config
	(*TracingPolicy)(nil),               // 1: runtime_config.TracingPolicy
	(*Config_ConfigJSON)(nil),           // 2: runtime_config.Config.ConfigJSON
	nil,                                 // 3: runtime_config.Config.ConfigJSON.TracingPoliciesEntry
	(*tetragon.Filter)(nil),             // 4: tetragon.Filter
	(*tetragon.AggregationOptions)(nil), // 5: tetragon.AggregationOptions
	(*emptypb.Empty)(nil),               // 6: google.protobuf.Empty
}
var file_config_proto_depIdxs = []int32{
	2, // 0: runtime_config.Config.config:type_name -> runtime_config.Config.ConfigJSON
	3, // 1: runtime_config.Config.ConfigJSON.tracing_policies:type_name -> runtime_config.Config.ConfigJSON.TracingPoliciesEntry
	4, // 2: runtime_config.Config.ConfigJSON.allow_list:type_name -> tetragon.Filter
	4, // 3: runtime_config.Config.ConfigJSON.deny_list:type_name -> tetragon.Filter
	5, // 4: runtime_config.Config.ConfigJSON.aggregation_options:type_name -> tetragon.AggregationOptions
	1, // 5: runtime_config.Config.ConfigJSON.TracingPoliciesEntry.value:type_name -> runtime_config.TracingPolicy
	0, // 6: runtime_config.ConfigController.Add:input_type -> runtime_config.Config
	6, // 7: runtime_config.ConfigController.Read:input_type -> google.protobuf.Empty
	6, // 8: runtime_config.ConfigController.Add:output_type -> google.protobuf.Empty
	0, // 9: runtime_config.ConfigController.Read:output_type -> runtime_config.Config
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
