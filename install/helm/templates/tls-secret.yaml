{{- if eq (include "common.cs.tls.enabled" .) "true" }}
{{- $secretName := include "common.cs.tls.secretName" . }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  {{- $clusterDomain := "cluster.local" }}
  {{- $releaseNamespace := (include "common.namespace" .) }}
  {{- $altNames := list "cs.example.com" "localhost" "127.0.0.1" }}
  {{- range $dep := .Chart.Dependencies }}
    {{- if and (has "cs-app" $dep.Tags | not) (ne $dep.Name "grafana") }}
    {{- continue }}
    {{- end }}
    {{- $altNames = append $altNames $dep.Name }}
    {{- if eq $dep.Name "reverse-proxy" }}
      {{- $altNames = append $altNames (printf "%s.%s.svc.%s" $dep.Name $releaseNamespace $clusterDomain) }}
    {{- else if eq $dep.Name "grafana" }}
      {{- $altNames = append $altNames (printf "%s.%s.svc.%s" $dep.Name $releaseNamespace $clusterDomain) }}
    {{- end }}
  {{- end }}
  {{- include "common.tls.generateSecret" (dict "context" . "secret" $secretName "altNames" $altNames) | indent 2 }}
{{- end }}

{{- if and .Values.global.postgresql.tls.enabled .Values.global.postgresql.tls.verify .Values.postgresql.externalHost (not .Values.global.postgresql.tls.existingSecret) }}
{{- $secretName := include "common.cs.tls.postgresql.secretName" . }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  ca.crt: {{ .Values.postgresql.tls.certCA | b64enc | quote }}
{{- end }}

{{- if and .Values.global.redis.tls.enabled .Values.global.redis.tls.verify .Values.redis.externalHost (not .Values.global.redis.tls.existingSecret) }}
{{- $secretName := include "common.cs.tls.redis.secretName" . }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  ca.crt: {{ required "A valid .Values.redis.tls.certCA entry required!" .Values.redis.tls.certCA | b64enc | quote }}
{{- end }}

{{- if and .Values.global.clickhouse.tls.enabled .Values.global.clickhouse.tls.verify .Values.clickhouse.externalHost (not .Values.global.clickhouse.tls.existingSecret) }}
{{- $secretName := include "common.cs.tls.clickhouse.secretName" . }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  ca.crt: {{ required "A valid .Values.clickhouse.tls.certCA entry required!" .Values.clickhouse.tls.certCA | b64enc | quote }}
{{- end }}
