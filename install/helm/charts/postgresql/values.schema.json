{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                },
                "postgresql": {
                    "type": "object",
                    "properties": {
                        "tls": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "Enable TLS traffic support (overrides `tls.enabled`)",
                                    "default": null,
                                    "nullable": true
                                },
                                "autoGenerated": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "Generate automatically self-signed TLS certificates (overrides `tls.autoGenerated`)",
                                    "default": null,
                                    "nullable": true
                                },
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Name of an existing secret that contains the certificates (overrides `tls.existingSecret`)",
                                    "default": ""
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate value. Requires `tls.autoGenerated` to be `false` (overrides `tls.cert`)",
                                    "default": ""
                                },
                                "certKey": {
                                    "type": "string",
                                    "description": "Certificate key value. Requires `tls.autoGenerated` to be `false` (overrides `tls.certKey`)",
                                    "default": ""
                                },
                                "certCA": {
                                    "type": "string",
                                    "description": "CA Certificate value. Requires `tls.autoGenerated` to be `false` (overrides `tls.certCA`)",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.fullname template",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.namespace",
            "default": ""
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "labels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "annotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "imagePullSecrets": {
            "type": "array",
            "description": "Global Docker registry secret names as an array",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "PostgreSQL image registry",
                    "default": "REGISTRY_NAME"
                },
                "repository": {
                    "type": "string",
                    "description": "PostgreSQL image repository",
                    "default": "REPOSITORY_NAME/postgresql"
                },
                "digest": {
                    "type": "string",
                    "description": "PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "PostgreSQL image pull policy",
                    "default": "IfNotPresent"
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "enablePostgresUser": {
                    "type": "boolean",
                    "description": "Assign a password to the \"postgres\" admin user. Otherwise, remote access will be blocked for this user",
                    "default": false
                },
                "postgresPassword": {
                    "type": "string",
                    "description": "Password for the \"postgres\" admin user. Ignored if `auth.existingSecret` is provided",
                    "default": ""
                },
                "username": {
                    "type": "string",
                    "description": "Name for a custom user to create",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "Password for the custom user to create. Ignored if `auth.existingSecret` is provided",
                    "default": ""
                },
                "database": {
                    "type": "string",
                    "description": "Name for a custom database to create",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of existing secret to use for PostgreSQL credentials. `auth.postgresPassword`, `auth.password`, and `auth.replicationPassword` will be ignored and picked up from this secret",
                    "default": ""
                },
                "existingSecretAdminPasswordKey": {
                    "type": "string",
                    "description": "Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.",
                    "default": "postgres-password"
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of key in existing secret to use for PostgreSQL credentials. Only used when `auth.existingSecret` is set.",
                    "default": "password"
                }
            }
        },
        "tls": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable TLS traffic support",
                    "default": false
                },
                "autoGenerated": {
                    "type": "boolean",
                    "description": "Generate automatically self-signed TLS certificates",
                    "default": false
                },
                "preferServerCiphers": {
                    "type": "boolean",
                    "description": "Whether to use the server's TLS cipher preferences rather than the client's",
                    "default": true
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret that contains the certificates",
                    "default": ""
                },
                "certFilename": {
                    "type": "string",
                    "description": "Certificate filename",
                    "default": "tls.crt"
                },
                "certKeyFilename": {
                    "type": "string",
                    "description": "Certificate key filename",
                    "default": "tls.key"
                },
                "certCAFilename": {
                    "type": "string",
                    "description": "CA Certificate filename",
                    "default": "ca.crt"
                },
                "crlFilename": {
                    "type": "string",
                    "description": "File containing a Certificate Revocation List",
                    "default": ""
                },
                "cert": {
                    "type": "string",
                    "description": "Certificate value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                },
                "certKey": {
                    "type": "string",
                    "description": "Certificate key value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                },
                "certCA": {
                    "type": "string",
                    "description": "CA Certificate value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                }
            }
        },
        "postgresqlSharedPreloadLibraries": {
            "type": "string",
            "description": "Shared preload libraries (comma-separated list)",
            "default": ""
        },
        "shmVolume": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable emptyDir volume for /dev/shm for PostgreSQL pod(s)",
                    "default": true
                },
                "sizeLimit": {
                    "type": "string",
                    "description": "Set this to enable a size limit on the shm tmpfs",
                    "default": ""
                }
            }
        },
        "configuration": {
            "type": "string",
            "description": "PostgreSQL main configuration to be injected as ConfigMap",
            "default": ""
        },
        "existingConfigmap": {
            "type": "string",
            "description": "Name of an existing ConfigMap with PostgreSQL configuration",
            "default": ""
        },
        "podLabels": {
            "type": "object",
            "description": "Map of labels to add to the pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Map of annotations to add to the pods",
            "default": {}
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for PostgreSQL pods assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for PostgreSQL pods assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for PostgreSQL pods assignment",
            "default": [],
            "items": {}
        },
        "terminationGracePeriodSeconds": {
            "type": "string",
            "description": "Seconds PostgreSQL pod needs to terminate gracefully",
            "default": ""
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to PostgreSQL nodes",
            "default": [],
            "items": {}
        },
        "volumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for the PostgreSQL container(s)",
            "default": [],
            "items": {}
        },
        "volumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for the PostgreSQL pod(s)",
            "default": [],
            "items": {}
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "postgresql": {
                    "type": "number",
                    "description": "PostgreSQL container port",
                    "default": 5432
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled pods' Security Context",
                    "default": true
                },
                "fsGroupChangePolicy": {
                    "type": "string",
                    "description": "Set filesystem group change policy",
                    "default": "Always"
                },
                "sysctls": {
                    "type": "array",
                    "description": "Set kernel settings using the sysctl interface",
                    "default": [],
                    "items": {}
                },
                "supplementalGroups": {
                    "type": "array",
                    "description": "Set filesystem extra groups",
                    "default": [],
                    "items": {}
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Group ID for the pod",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsUser",
                    "default": 1001
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsGroup",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set container's Security Context runAsNonRoot",
                    "default": true
                },
                "privileged": {
                    "type": "boolean",
                    "description": "Set container's Security Context privileged",
                    "default": false
                },
                "readOnlyRootFilesystem": {
                    "type": "boolean",
                    "description": "Set container's Security Context readOnlyRootFilesystem",
                    "default": true
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean",
                    "description": "Set container's Security Context allowPrivilegeEscalation",
                    "default": false
                },
                "capabilities": {
                    "type": "object",
                    "properties": {
                        "drop": {
                            "type": "array",
                            "description": "List of capabilities to be dropped",
                            "default": [
                                "ALL"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set container's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe on PostgreSQL containers",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe on PostgreSQL containers",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 5
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on PostgreSQL containers",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 15
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes Service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "postgresql": {
                            "type": "number",
                            "description": "PostgreSQL service port",
                            "default": 5432
                        }
                    }
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for PostgreSQL service",
                    "default": {}
                },
                "headless": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the headless service.",
                            "default": {}
                        }
                    }
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable PostgreSQL data persistence using PVC",
                    "default": true
                },
                "existingClaim": {
                    "type": "string",
                    "description": "Name of an existing PVC to use",
                    "default": ""
                },
                "storageClass": {
                    "type": "string",
                    "description": "PVC Storage Class for PostgreSQL data volume",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "PVC Access Mode for PostgreSQL volume",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "PVC Storage Request for PostgreSQL volume",
                    "default": "8Gi"
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for the PVC",
                    "default": {}
                },
                "labels": {
                    "type": "object",
                    "description": "Labels for the PVC",
                    "default": {}
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume (this value is evaluated as a template)",
                    "default": {}
                },
                "dataSource": {
                    "type": "object",
                    "description": "Custom PVC data source",
                    "default": {}
                },
                "persistentVolumeClaimRetentionPolicy": {
                    "type": "object",
                    "description": "PostgreSQL Persistent Volume Claim Retention Policy",
                    "default": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable creation of ServiceAccount for PostgreSQL pod",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "automount": {
                    "type": "boolean",
                    "description": "Allows auto mount of ServiceAccountToken on the serviceAccount created",
                    "default": false
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a prometheus exporter",
                    "default": false
                },
                "externalHost": {
                    "type": "string",
                    "description": "PostgreSQL metrics external host",
                    "default": ""
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "PostgreSQL Prometheus Exporter image registry",
                            "default": "REGISTRY_NAME"
                        },
                        "repository": {
                            "type": "string",
                            "description": "PostgreSQL Prometheus Exporter image repository",
                            "default": "REPOSITORY_NAME/postgres-exporter"
                        },
                        "digest": {
                            "type": "string",
                            "description": "PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "PostgreSQL Prometheus Exporter image pull policy",
                            "default": "IfNotPresent"
                        }
                    }
                },
                "collectors": {
                    "type": "object",
                    "description": "Control enabled collectors",
                    "default": {}
                },
                "customMetrics": {
                    "type": "object",
                    "description": "Define additional custom metrics",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to add to PostgreSQL Prometheus exporter",
                    "default": [],
                    "items": {}
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "Set containers' Security Context runAsGroup",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set container's Security Context runAsNonRoot",
                            "default": true
                        },
                        "privileged": {
                            "type": "boolean",
                            "description": "Set container's Security Context privileged",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set container's Security Context readOnlyRootFilesystem",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set container's Security Context allowPrivilegeEscalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "List of capabilities to be dropped",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on PostgreSQL Prometheus exporter containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on PostgreSQL Prometheus exporter containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on PostgreSQL Prometheus exporter containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "PostgreSQL Prometheus exporter metrics container port",
                            "default": 9187
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "ports": {
                            "type": "object",
                            "properties": {
                                "metrics": {
                                    "type": "number",
                                    "description": "PostgreSQL Prometheus Exporter service port",
                                    "default": 9187
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Static clusterIP or None for headless services",
                            "default": ""
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where client requests go, to the same pod or round-robin",
                            "default": "None"
                        }
                    }
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether a NetworkPolicy should be created",
                    "default": true
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "Don't require server label for connections",
                    "default": true
                },
                "extraIngress": {
                    "type": "array",
                    "description": "Add extra ingress rules to the NetworkPolicy",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraEgress": {
                    "type": "array",
                    "description": "Add extra ingress rules to the NetworkPolicy",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "backup": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the logical dump of the database \"regularly\"",
                    "default": false
                },
                "cronjob": {
                    "type": "object",
                    "properties": {
                        "schedule": {
                            "type": "string",
                            "description": "Set the cronjob parameter schedule",
                            "default": "@daily"
                        },
                        "timeZone": {
                            "type": "string",
                            "description": "Set the cronjob parameter timeZone",
                            "default": ""
                        },
                        "concurrencyPolicy": {
                            "type": "string",
                            "description": "Set the cronjob parameter concurrencyPolicy",
                            "default": "Allow"
                        },
                        "failedJobsHistoryLimit": {
                            "type": "number",
                            "description": "Set the cronjob parameter failedJobsHistoryLimit",
                            "default": 1
                        },
                        "successfulJobsHistoryLimit": {
                            "type": "number",
                            "description": "Set the cronjob parameter successfulJobsHistoryLimit",
                            "default": 3
                        },
                        "startingDeadlineSeconds": {
                            "type": "string",
                            "description": "Set the cronjob parameter startingDeadlineSeconds",
                            "default": ""
                        },
                        "ttlSecondsAfterFinished": {
                            "type": "string",
                            "description": "Set the cronjob parameter ttlSecondsAfterFinished",
                            "default": ""
                        },
                        "restartPolicy": {
                            "type": "string",
                            "description": "Set the cronjob parameter restartPolicy",
                            "default": "OnFailure"
                        },
                        "podSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable PodSecurityContext for CronJob/Backup",
                                    "default": true
                                },
                                "fsGroupChangePolicy": {
                                    "type": "string",
                                    "description": "Set filesystem group change policy",
                                    "default": "Always"
                                },
                                "sysctls": {
                                    "type": "array",
                                    "description": "Set kernel settings using the sysctl interface",
                                    "default": [],
                                    "items": {}
                                },
                                "supplementalGroups": {
                                    "type": "array",
                                    "description": "Set filesystem extra groups",
                                    "default": [],
                                    "items": {}
                                },
                                "fsGroup": {
                                    "type": "number",
                                    "description": "Group ID for the CronJob",
                                    "default": 1001
                                }
                            }
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable containers' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set containers' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsGroup": {
                                    "type": "number",
                                    "description": "Set containers' Security Context runAsGroup",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set container's Security Context runAsNonRoot",
                                    "default": true
                                },
                                "privileged": {
                                    "type": "boolean",
                                    "description": "Set container's Security Context privileged",
                                    "default": false
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set container's Security Context readOnlyRootFilesystem",
                                    "default": true
                                },
                                "allowPrivilegeEscalation": {
                                    "type": "boolean",
                                    "description": "Set container's Security Context allowPrivilegeEscalation",
                                    "default": false
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "description": "List of capabilities to be dropped",
                                            "default": [
                                                "ALL"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "seccompProfile": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Set container's Security Context seccomp profile",
                                            "default": "RuntimeDefault"
                                        }
                                    }
                                }
                            }
                        },
                        "command": {
                            "type": "array",
                            "description": "Set backup container's command to run",
                            "default": [
                                "/bin/sh",
                                "-c",
                                "pg_dumpall --clean --if-exists --load-via-partition-root --quote-all-identifiers --no-password --file=${PGDUMP_DIR}/pg_dumpall-$(date '+%Y-%m-%d-%H-%M').pgdump"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "labels": {
                            "type": "object",
                            "description": "Set the cronjob labels",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Set the cronjob annotations",
                            "default": {}
                        },
                        "nodeSelector": {
                            "type": "object",
                            "description": "Node labels for PostgreSQL backup CronJob pod assignment",
                            "default": {}
                        },
                        "networkPolicy": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether a NetworkPolicy should be created",
                                    "default": true
                                }
                            }
                        },
                        "storage": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable using a `PersistentVolumeClaim` as backup data volume",
                                    "default": true
                                },
                                "existingClaim": {
                                    "type": "string",
                                    "description": "Provide an existing `PersistentVolumeClaim`",
                                    "default": ""
                                },
                                "resourcePolicy": {
                                    "type": "string",
                                    "description": "Setting it to \"keep\" to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted",
                                    "default": ""
                                },
                                "storageClass": {
                                    "type": "string",
                                    "description": "PVC Storage Class for the backup data volume",
                                    "default": ""
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "PV Access Mode",
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "size": {
                                    "type": "string",
                                    "description": "PVC Storage Request for the backup data volume",
                                    "default": "8Gi"
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "PVC annotations",
                                    "default": {}
                                },
                                "mountPath": {
                                    "type": "string",
                                    "description": "Path to mount the volume at",
                                    "default": "/backup/pgdump"
                                },
                                "subPath": {
                                    "type": "string",
                                    "description": "Subdirectory of the volume to mount at",
                                    "default": ""
                                }
                            }
                        },
                        "volumeMounts": {
                            "type": "array",
                            "description": "Optionally specify extra list of additional volumeMounts for the backup container",
                            "default": [],
                            "items": {}
                        },
                        "volumes": {
                            "type": "array",
                            "description": "Optionally specify extra list of additional volumes for the backup container",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}