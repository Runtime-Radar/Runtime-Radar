{{- if not .Values.auth.existingSecret }}
{{- $secretName := include "common.authSecretName" . }}
{{- $adminPasswordKey := include "postgresql.adminPasswordKey" . }}
{{- $adminPassword := "" }}
{{- if .Values.auth.enablePostgresUser }}
{{- $adminPassword = include "common.secrets.password" (dict "context" . "secret" $secretName "key" $adminPasswordKey "defaultValue" .Values.auth.postgresPassword) }}
{{- end }}
{{- $userPasswordKey := include "postgresql.userPasswordKey" . }}
{{- $userPassword := "" }}
{{- if and .Values.auth.username (ne .Values.auth.username "postgres") }}
{{- $userPassword = include "common.secrets.password" (dict "context" . "secret" $secretName "key" $userPasswordKey "defaultValue" .Values.auth.password) }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ include "common.namespace" . | quote }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- with (include "common.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- if $adminPassword }}
  {{ $adminPasswordKey }}: {{ $adminPassword | b64enc | quote }}
  {{- end }}
  {{- if $userPassword }}
  {{ $userPasswordKey }}: {{ $userPassword | b64enc | quote }}
  {{- end }}
{{- end }}
