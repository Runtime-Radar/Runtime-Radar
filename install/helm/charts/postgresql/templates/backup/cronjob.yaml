{{- if .Values.backup.enabled }}
{{- $customUser := .Values.auth.username }}
{{- $tlsEnabled := eq (include "common.tls.enabled" .) "true" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "common.fullname" . }}-pgdumpall
  namespace: {{ include "common.namespace" . | quote }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: pg_dumpall
  {{- $annotations := include "common.mergeAnnotations" (dict "context" . "value" .Values.backup.cronjob.annotations) }}
  {{- with $annotations }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ quote .Values.backup.cronjob.schedule }}
  {{- if .Values.backup.cronjob.timezone }}
  timeZone: {{ .Values.backup.cronjob.timezone | quote }}
  {{- end }}
  concurrencyPolicy: {{ .Values.backup.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.backup.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .Values.backup.cronjob.successfulJobsHistoryLimit }}
  {{- if .Values.backup.cronjob.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ .Values.backup.cronjob.startingDeadlineSeconds }}
  {{- end }}
  jobTemplate:
    spec:
      {{- if .Values.backup.cronjob.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .Values.backup.cronjob.ttlSecondsAfterFinished }}
      {{- end }}
      template:
        metadata:
          labels:
            {{- include "common.labels" . | nindent 12 }}
            app.kubernetes.io/component: pg_dumpall
          {{- with $annotations }}
          annotations:
            {{- . | nindent 12 }}
          {{- end }}
        spec:
          {{ include "common.imagePullSecrets" . | nindent 10 }}
          {{- with .Values.backup.cronjob.nodeSelector }}
          nodeSelector: {{- toYaml . | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ include "common.fullname" . }}-pgdumpall
            image: {{ include "postgresql.image" . }}
            imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
            env:
              - name: PGUSER
              {{- if .Values.auth.enablePostgresUser }}
                value: postgres
              {{- else }}
                value: {{ $customUser | quote }}
              {{- end }}
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ include "common.authSecretName" . }}
                    key: {{ include "postgresql.adminPasswordKey" . }}
              - name: PGHOST
                value: {{ include "common.fullname" . }}
              - name: PGPORT
                value: {{ toString .Values.service.ports.postgresql | quote }}
              - name: PGDUMP_DIR
                value: {{ .Values.backup.cronjob.storage.mountPath }}
              {{- if $tlsEnabled }}
              - name:  PGSSLROOTCERT
                value: {{ printf "/tmp/certs/%s" .Values.tls.certCAFilename }}
              {{- end }}
            command: {{- toYaml .Values.backup.cronjob.command | nindent 14 }}
            volumeMounts:
              {{- if $tlsEnabled }}
              - name: raw-certificates
                mountPath: /tmp/certs
              {{- end }}
              {{- if .Values.backup.cronjob.storage.enabled }}
              - name: datadir
                mountPath: {{ .Values.backup.cronjob.storage.mountPath }}
                subPath: {{ .Values.backup.cronjob.storage.subPath }}
              {{- end }}
              - name: empty-dir
                mountPath: /tmp
                subPath: tmp-dir
              {{- with .Values.backup.cronjob.volumeMounts }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
            {{- if .Values.backup.cronjob.containerSecurityContext.enabled }}
            securityContext:
              {{- omit .Values.backup.cronjob.containerSecurityContext "enabled" | toYaml | nindent 14 }}
            {{- end }}
            {{- with .Values.backup.cronjob.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          restartPolicy: {{ .Values.backup.cronjob.restartPolicy }}
          {{- if .Values.backup.cronjob.podSecurityContext.enabled }}
          securityContext:
            fsGroup: {{ .Values.backup.cronjob.podSecurityContext.fsGroup }}
          {{- end }}
          volumes:
            {{- if $tlsEnabled }}
            - name: raw-certificates
              secret:
                secretName: {{ include "common.tls.secretName" . }}
            {{- end }}
            {{- if .Values.backup.cronjob.storage.enabled }}
            {{- if .Values.backup.cronjob.storage.existingClaim }}
            - name: datadir
              persistentVolumeClaim:
                claimName: {{ printf "%s" (tpl .Values.backup.cronjob.storage.existingClaim .) }}
            {{- else }}
            - name: datadir
              persistentVolumeClaim:
                claimName: {{ include "common.fullname" . }}-pgdumpall
            {{- end }}
            {{- end }}
            - name: empty-dir
              emptyDir: {}
            {{- with .Values.backup.cronjob.volumes }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
{{- end }}
