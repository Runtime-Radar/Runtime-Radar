{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                },
                "clickhouse": {
                    "type": "object",
                    "properties": {
                        "tls": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "Enable TLS traffic support (overrides `tls.enabled`)",
                                    "default": null,
                                    "nullable": true
                                },
                                "autoGenerated": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "Generate automatically self-signed TLS certificates (overrides `tls.autoGenerated`)",
                                    "default": null,
                                    "nullable": true
                                },
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Name of an existing secret that contains the certificates (overrides `tls.existingSecret`)",
                                    "default": ""
                                },
                                "cert": {
                                    "type": "string",
                                    "description": "Certificate value. Requires `tls.autoGenerated` to be `false` (overrides `tls.cert`)",
                                    "default": ""
                                },
                                "certKey": {
                                    "type": "string",
                                    "description": "Certificate key value. Requires `tls.autoGenerated` to be `false` (overrides `tls.certKey`)",
                                    "default": ""
                                },
                                "certCA": {
                                    "type": "string",
                                    "description": "CA Certificate value. Requires `tls.autoGenerated` to be `false` (overrides `tls.certCA`)",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.fullname template",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.namespace",
            "default": ""
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "labels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "annotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "imagePullSecrets": {
            "type": "array",
            "description": "Global Docker registry secret names as an array",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "ClickHouse image registry",
                    "default": "REGISTRY_NAME"
                },
                "repository": {
                    "type": "string",
                    "description": "ClickHouse image repository",
                    "default": "REPOSITORY_NAME/clickhouse"
                },
                "digest": {
                    "type": "string",
                    "description": "ClickHouse image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "ClickHouse image pull policy",
                    "default": "IfNotPresent"
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "ClickHouse Admin username",
                    "default": "default"
                },
                "password": {
                    "type": "string",
                    "description": "ClickHouse Admin password",
                    "default": ""
                },
                "database": {
                    "type": "string",
                    "description": "Name for a custom database to create",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of a secret containing the Admin password",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of the key inside the existing secret",
                    "default": ""
                }
            }
        },
        "tls": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable TLS traffic support",
                    "default": false
                },
                "autoGenerated": {
                    "type": "boolean",
                    "description": "Generate automatically self-signed TLS certificates",
                    "default": false
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret that contains the certificates",
                    "default": ""
                },
                "certFilename": {
                    "type": "string",
                    "description": "Certificate filename",
                    "default": "tls.crt"
                },
                "certKeyFilename": {
                    "type": "string",
                    "description": "Certificate key filename",
                    "default": "tls.key"
                },
                "certCAFilename": {
                    "type": "string",
                    "description": "CA Certificate filename",
                    "default": "ca.crt"
                },
                "cert": {
                    "type": "string",
                    "description": "Certificate value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                },
                "certKey": {
                    "type": "string",
                    "description": "Certificate key value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                },
                "certCA": {
                    "type": "string",
                    "description": "CA Certificate value. Requires `tls.autoGenerated` to be `false`",
                    "default": ""
                }
            }
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of ClickHouse replicas to deploy",
            "default": 1
        },
        "logLevel": {
            "type": "string",
            "description": "Logging level",
            "default": "information"
        },
        "keeper": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy ClickHouse keeper. Support is experimental.",
                    "default": false
                }
            }
        },
        "configuration": {
            "type": "string",
            "description": "Configuration overrides (evaluated as a template)",
            "default": ""
        },
        "existingConfigmap": {
            "type": "string",
            "description": "The name of an existing ConfigMap with your custom configuration for ClickHouse",
            "default": ""
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for ClickHouse pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for ClickHouse pods",
            "default": {}
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for ClickHouse pods assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for ClickHouse pods assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for ClickHouse pods assignment",
            "default": [],
            "items": {}
        },
        "terminationGracePeriodSeconds": {
            "type": "string",
            "description": "Seconds Redmine pod needs to terminate gracefully",
            "default": ""
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to ClickHouse nodes",
            "default": [],
            "items": {}
        },
        "volumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for the ClickHouse pod(s)",
            "default": [],
            "items": {}
        },
        "volumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for the ClickHouse container(s)",
            "default": [],
            "items": {}
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "ClickHouse HTTP container port",
                    "default": 8123
                },
                "https": {
                    "type": "number",
                    "description": "ClickHouse HTTPS container port",
                    "default": 8443
                },
                "tcp": {
                    "type": "number",
                    "description": "ClickHouse TCP container port",
                    "default": 9000
                },
                "tcpSecure": {
                    "type": "number",
                    "description": "ClickHouse TCP (secure) container port",
                    "default": 9440
                },
                "keeper": {
                    "type": "number",
                    "description": "ClickHouse keeper TCP container port",
                    "default": 2181
                },
                "keeperSecure": {
                    "type": "number",
                    "description": "ClickHouse keeper TCP (secure) container port",
                    "default": 3181
                },
                "keeperInter": {
                    "type": "number",
                    "description": "ClickHouse keeper interserver TCP container port",
                    "default": 9444
                },
                "mysql": {
                    "type": "number",
                    "description": "ClickHouse MySQL container port",
                    "default": 9004
                },
                "postgresql": {
                    "type": "number",
                    "description": "ClickHouse PostgreSQL container port",
                    "default": 9005
                },
                "interserver": {
                    "type": "number",
                    "description": "ClickHouse Interserver container port",
                    "default": 9009
                },
                "metrics": {
                    "type": "number",
                    "description": "ClickHouse metrics container port",
                    "default": 8001
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled ClickHouse pods' Security Context",
                    "default": true
                },
                "fsGroupChangePolicy": {
                    "type": "string",
                    "description": "Set filesystem group change policy",
                    "default": "Always"
                },
                "sysctls": {
                    "type": "array",
                    "description": "Set kernel settings using the sysctl interface",
                    "default": [],
                    "items": {}
                },
                "supplementalGroups": {
                    "type": "array",
                    "description": "Set filesystem extra groups",
                    "default": [],
                    "items": {}
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set ClickHouse pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsUser",
                    "default": 1001
                },
                "runAsGroup": {
                    "type": "number",
                    "description": "Set containers' Security Context runAsGroup",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set containers' Security Context runAsNonRoot",
                    "default": true
                },
                "privileged": {
                    "type": "boolean",
                    "description": "Set read only root file system pod's",
                    "default": false
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean",
                    "description": "Set contraller container's Security Context privileged",
                    "default": false
                },
                "readOnlyRootFilesystem": {
                    "type": "boolean",
                    "description": "Set contraller container's Security Context allowPrivilegeEscalation",
                    "default": true
                },
                "capabilities": {
                    "type": "object",
                    "properties": {
                        "drop": {
                            "type": "array",
                            "description": "List of capabilities to be droppedn",
                            "default": [
                                "ALL"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set container's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe on ClickHouse containers",
                    "default": true
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 3
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe on ClickHouse containers",
                    "default": true
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 3
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on ClickHouse containers",
                    "default": false
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 3
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 1
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "ClickHouse service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "ClickHouse service HTTP port",
                            "default": 8123
                        },
                        "https": {
                            "type": "number",
                            "description": "ClickHouse service HTTPS port",
                            "default": 443
                        },
                        "tcp": {
                            "type": "number",
                            "description": "ClickHouse service TCP port",
                            "default": 9000
                        },
                        "tcpSecure": {
                            "type": "number",
                            "description": "ClickHouse service TCP (secure) port",
                            "default": 9440
                        },
                        "keeper": {
                            "type": "number",
                            "description": "ClickHouse keeper TCP container port",
                            "default": 2181
                        },
                        "keeperSecure": {
                            "type": "number",
                            "description": "ClickHouse keeper TCP (secure) container port",
                            "default": 3181
                        },
                        "keeperInter": {
                            "type": "number",
                            "description": "ClickHouse keeper interserver TCP container port",
                            "default": 9444
                        },
                        "mysql": {
                            "type": "number",
                            "description": "ClickHouse service MySQL port",
                            "default": 9004
                        },
                        "postgresql": {
                            "type": "number",
                            "description": "ClickHouse service PostgreSQL port",
                            "default": 9005
                        },
                        "interserver": {
                            "type": "number",
                            "description": "ClickHouse service Interserver port",
                            "default": 9009
                        },
                        "metrics": {
                            "type": "number",
                            "description": "ClickHouse service metrics port",
                            "default": 8001
                        }
                    }
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for ClickHouse service",
                    "default": {}
                },
                "headless": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the headless service.",
                            "default": {}
                        }
                    }
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": true
                },
                "existingClaim": {
                    "type": "string",
                    "description": "Name of an existing PVC to use",
                    "default": ""
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class of backing PVC",
                    "default": ""
                },
                "labels": {
                    "type": "object",
                    "description": "Persistent Volume Claim labels",
                    "default": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume Access Modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "Size of data volume",
                    "default": "8Gi"
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for ClickHouse data PVC",
                    "default": {}
                },
                "dataSource": {
                    "type": "object",
                    "description": "Custom PVC data source",
                    "default": {}
                },
                "persistentVolumeClaimRetentionPolicy": {
                    "type": "object",
                    "description": "PostgreSQL Persistent Volume Claim Retention Policy",
                    "default": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a ServiceAccount should be created",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional Service Account annotations (evaluated as a template)",
                    "default": {}
                },
                "automount": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": false
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the export of Prometheus metrics",
                    "default": false
                },
                "externalHost": {
                    "type": "string",
                    "description": "ClickHouse metrics external host",
                    "default": ""
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Specifies whether a NetworkPolicy should be created",
                    "default": true
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "Don't require server label for connections",
                    "default": true
                },
                "extraIngress": {
                    "type": "array",
                    "description": "Add extra ingress rules to the NetworkPolicy",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                },
                "extraEgress": {
                    "type": "array",
                    "description": "Add extra ingress rules to the NetworkPolicy",
                    "default": "[]",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}